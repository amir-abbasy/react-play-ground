{
  "add": {
    "Name": "Add",
    "Description": "Adds numbers in two lists together, one by one.",
    "Type": "Arithmetic Operation",
    "Inputs": [
      {
        "name": "list1",
        "type": "list of numbers",
        "target": true
      },
      {
        "name": "list2",
        "type": "list of numbers",
        "target": true
      }
    ],
    "Outputs": [
      {
        "name": "result",
        "type": "list of numbers",
        "source": true
      }
    ],
    "Example": {
      "Explanation": "If you have the prices of apples and oranges for 3 days and want to know the total price each day:",
      "Code": "np.add([1.5, 2.0, 3.0], [1.0, 1.5, 2.5])",
      "Result": "[2.5, 3.5, 5.5]"
    }
  },
  "subtract": {
    "Name": "Subtract",
    "Description": "Subtracts second list from first list, element by element.",
    "Type": "Arithmetic Operation",
    "Inputs": [
      {
        "name": "list1",
        "type": "list of numbers",
        "target": true
      },
      {
        "name": "list2",
        "type": "list of numbers",
        "target": true
      }
    ],
    "Outputs": [
      {
        "name": "result",
        "type": "list of numbers",
        "source": true
      }
    ],
    "Example": {
      "Explanation": "Finding the difference between predicted and actual values:",
      "Code": "np.subtract([10, 20, 30], [1, 2, 3])",
      "Result": "[9, 18, 27]"
    }
  },
  "multiply": {
    "Name": "Multiply",
    "Description": "Multiplies two lists together, element by element.",
    "Type": "Arithmetic Operation",
    "Inputs": [
      {
        "name": "list1",
        "type": "list of numbers",
        "target": true
      },
      {
        "name": "list2",
        "type": "list of numbers",
        "target": true
      }
    ],
    "Outputs": [
      {
        "name": "result",
        "type": "list of numbers",
        "source": true
      }
    ],
    "Example": {
      "Explanation": "Calculating total cost when you have quantity and price per unit:",
      "Code": "np.multiply([2, 3, 4], [1.5, 2.0, 2.5])",
      "Result": "[3.0, 6.0, 10.0]"
    }
  },
  "divide": {
    "Name": "Divide",
    "Description": "Divides first list by second list, element by element.",
    "Type": "Arithmetic Operation",
    "Inputs": [
      {
        "name": "list1",
        "type": "list of numbers",
        "target": true
      },
      {
        "name": "list2",
        "type": "list of numbers",
        "target": true
      }
    ],
    "Outputs": [
      {
        "name": "result",
        "type": "list of numbers",
        "source": true
      }
    ],
    "Example": {
      "Explanation": "Calculating percentage of budget spent:",
      "Code": "np.divide([50, 30, 20], [100, 50, 40])",
      "Result": "[0.5, 0.6, 0.5]"
    }
  },
  "concatenate": {
    "Name": "Concatenate",
    "Description": "Joins two or more arrays end-to-end.",
    "Type": "Array Manipulation",
    "Inputs": [
      {
        "name": "arrays",
        "type": "list of arrays",
        "target": true
      },
      {
        "name": "axis",
        "type": "integer",
        "default": 0,
        "optional": true
      }
    ],
    "Outputs": [
      {
        "name": "result",
        "type": "array",
        "source": true
      }
    ],
    "Example": {
      "Explanation": "Combining two lists of numbers:",
      "Code": "np.concatenate([[1, 2], [3, 4]])",
      "Result": "[1, 2, 3, 4]"
    }
  },
  "reshape": {
    "Name": "Reshape",
    "Description": "Gives a new shape to an array without changing its data.",
    "Type": "Array Manipulation",
    "Inputs": [
      {
        "name": "array",
        "type": "array",
        "target": true
      },
      {
        "name": "shape",
        "type": "tuple of integers",
        "target": true
      }
    ],
    "Outputs": [
      {
        "name": "result",
        "type": "array",
        "source": true
      }
    ],
    "Example": {
      "Explanation": "Converting a 1D array to 2D array:",
      "Code": "np.reshape([1, 2, 3, 4], (2, 2))",
      "Result": "[[1, 2], [3, 4]]"
    }
  },
  "transpose": {
    "Name": "Transpose",
    "Description": "Reverses or permutes the axes of an array.",
    "Type": "Array Manipulation",
    "Inputs": [
      {
        "name": "array",
        "type": "array",
        "target": true
      }
    ],
    "Outputs": [
      {
        "name": "result",
        "type": "array",
        "source": true
      }
    ],
    "Example": {
      "Explanation": "Converting rows to columns and vice versa:",
      "Code": "np.transpose([[1, 2], [3, 4]])",
      "Result": "[[1, 3], [2, 4]]"
    }
  },
  "sort": {
    "Name": "Sort",
    "Description": "Returns a sorted copy of an array.",
    "Type": "Array Operation",
    "Inputs": [
      {
        "name": "array",
        "type": "array",
        "target": true
      },
      {
        "name": "axis",
        "type": "integer",
        "default": -1,
        "optional": true
      }
    ],
    "Outputs": [
      {
        "name": "result",
        "type": "array",
        "source": true
      }
    ],
    "Example": {
      "Explanation": "Sorting a list of numbers:",
      "Code": "np.sort([3, 1, 2])",
      "Result": "[1, 2, 3]"
    }
  },
  "unique": {
    "Name": "Unique",
    "Description": "Finds unique elements in an array.",
    "Type": "Array Operation",
    "Inputs": [
      {
        "name": "array",
        "type": "array",
        "target": true
      }
    ],
    "Outputs": [
      {
        "name": "result",
        "type": "array",
        "source": true
      }
    ],
    "Example": {
      "Explanation": "Finding unique values in a list with duplicates:",
      "Code": "np.unique([1, 1, 2, 2, 3, 3])",
      "Result": "[1, 2, 3]"
    }
  },
  "where": {
    "Name": "Where",
    "Description": "Returns elements chosen from two arrays depending on condition.",
    "Type": "Array Operation",
    "Inputs": [
      {
        "name": "condition",
        "type": "array of booleans",
        "target": true
      },
      {
        "name": "x",
        "type": "array",
        "target": true
      },
      {
        "name": "y",
        "type": "array",
        "target": true
      }
    ],
    "Outputs": [
      {
        "name": "result",
        "type": "array",
        "source": true
      }
    ],
    "Example": {
      "Explanation": "Replace negative numbers with zero:",
      "Code": "np.where([1, -2, 3, -4] > 0, [1, -2, 3, -4], 0)",
      "Result": "[1, 0, 3, 0]"
    }
  }
}
